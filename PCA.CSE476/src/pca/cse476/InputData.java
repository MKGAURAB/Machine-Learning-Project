/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pca.cse476;

import java.awt.BorderLayout;
import javax.swing.table.DefaultTableModel;
import la.matrix.DenseMatrix;
import la.matrix.Matrix;
import ml.subspace.KernelPCA;
import ml.subspace.PCA;
import static ml.utils.Printer.disp;
import static pca.cse476.MainFrmae.InOut;

/**
 *
 * @author mkgaurab
 */
public class InputData extends javax.swing.JFrame {

    /**
     * Creates new form InputData
     */
    public int RowID, ColID;
    public Matrix X, R;

    public InputData() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        RowID = ColID = 0;
        generateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InputTablePanel = new javax.swing.JPanel();
        InputTakingJScrollPane = new javax.swing.JScrollPane();
        InputTakingJtable = new javax.swing.JTable();
        RowTextField = new javax.swing.JTextField();
        ColoumnTextField = new javax.swing.JTextField();
        GenerateOutPutBTN = new javax.swing.JButton();
        ColoumnLabel = new javax.swing.JLabel();
        RowLabel = new javax.swing.JLabel();
        GenerateInputBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Input Frame");

        InputTablePanel.setLayout(new java.awt.BorderLayout());

        InputTakingJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        InputTakingJtable.setColumnSelectionAllowed(true);
        InputTakingJScrollPane.setViewportView(InputTakingJtable);

        InputTablePanel.add(InputTakingJScrollPane, java.awt.BorderLayout.CENTER);

        GenerateOutPutBTN.setText("Output");
        GenerateOutPutBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GenerateOutPutBTNMouseClicked(evt);
            }
        });

        ColoumnLabel.setText("Coloumns");

        RowLabel.setText("  Rows");

        GenerateInputBTN.setText("Create Table");
        GenerateInputBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GenerateInputBTNMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(InputTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RowTextField)
                            .addComponent(RowLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ColoumnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ColoumnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(GenerateInputBTN)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenerateOutPutBTN)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ColoumnLabel)
                    .addComponent(RowLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ColoumnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenerateInputBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(InputTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenerateOutPutBTN)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenerateInputBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenerateInputBTNMouseClicked
        // TODO add your handling code here:
        InputTakingJtable.removeAll();
        RowID = Integer.parseInt(RowTextField.getText());
        ColID = Integer.parseInt(ColoumnTextField.getText());
        generateTable();
    }//GEN-LAST:event_GenerateInputBTNMouseClicked

    private void GenerateOutPutBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenerateOutPutBTNMouseClicked
        // TODO add your handling code here:
        if (RowID > 1 && ColID > 1) {
            doPCA();
            ShowOutput outputFrame = new ShowOutput(R);
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(ShowOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(ShowOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(ShowOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(ShowOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    outputFrame.setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_GenerateOutPutBTNMouseClicked
    void doPCA() {
        double[][] data = new double[RowID][ColID];
        for (int i = 0; i < RowID; i++) {
            for (int j = 0; j < ColID; j++) {
                data[i][j] = Double.parseDouble((String) InputTakingJtable.getValueAt(i, j));
            }
        }
        X = new DenseMatrix(data);
        R = PCA.run(X,ColID-1);
        //disp(X);
        //disp(R);
    }

    void generateTable() {
        String[][] dummyData = new String[RowID][ColID];
        String[] coloumnNames = new String[ColID];
        for (int i = 0; i < ColID; i++) {
            coloumnNames[i] = "";
        }
        for (int i = 0; i < RowID; i++) {
            for (int j = 0; j < ColID; j++) {
                dummyData[i][j] = "0.0";
            }
        }
        
        InputTablePanel.removeAll();
        InputTakingJScrollPane.removeAll();
        InputTakingJtable.setModel(new DefaultTableModel(dummyData, coloumnNames));
        for (int i = 0; i < InputTakingJtable.getColumnCount(); i++) {
            InputTakingJtable.getColumnModel().getColumn(i).setHeaderValue("Y");
            InputTakingJtable.getTableHeader().repaint();
        }
        //InputTakingJtable.getTableHeader().repaint();
        InputTablePanel.setLayout(new BorderLayout());
        InputTablePanel.add(InputTakingJtable, BorderLayout.CENTER);
        InputTablePanel.repaint();
        InputTablePanel.revalidate();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ColoumnLabel;
    private javax.swing.JTextField ColoumnTextField;
    private javax.swing.JButton GenerateInputBTN;
    private javax.swing.JButton GenerateOutPutBTN;
    private javax.swing.JPanel InputTablePanel;
    private javax.swing.JScrollPane InputTakingJScrollPane;
    private javax.swing.JTable InputTakingJtable;
    private javax.swing.JLabel RowLabel;
    private javax.swing.JTextField RowTextField;
    // End of variables declaration//GEN-END:variables
}
